// <auto-generated />
using System;
using AcsEvent.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AcsEvent.Migrations
{
    [DbContext(typeof(AcsEventDbContext))]
    partial class AcsEventDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AcsEvent.Entities.EmployeeInfo", b =>
                {
                    b.Property<int>("MaCC")
                        .HasMaxLength(50)
                        .HasColumnType("int");

                    b.Property<string>("HoTen")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("MaNV")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("MaPb")
                        .HasMaxLength(50)
                        .HasColumnType("int");

                    b.HasKey("MaCC");

                    b.ToTable("EmployeeInfos");
                });

            modelBuilder.Entity("AcsEvent.Entities.PhongBan", b =>
                {
                    b.Property<int>("MaPb")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaPb"));

                    b.Property<string>("TenPb")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("MaPb");

                    b.ToTable("PhongBans");
                });

            modelBuilder.Entity("AcsEvent.Entities.ThietBi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("IP")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TenTB")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("ThietBis");
                });

            modelBuilder.Entity("AcsEvent.Models.CheckInOut", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool?>("DiMuon")
                        .HasColumnType("bit");

                    b.Property<string>("MaNV")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTimeOffset?>("TimeIn")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("TimeOut")
                        .HasColumnType("datetimeoffset");

                    b.Property<bool?>("VeSom")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("CheckInOuts");
                });
#pragma warning restore 612, 618
        }
    }
}
